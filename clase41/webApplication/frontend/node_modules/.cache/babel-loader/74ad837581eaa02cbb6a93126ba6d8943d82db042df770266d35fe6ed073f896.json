{"ast":null,"code":"/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n  var Helpers = faker.helpers,\n    self = this;\n\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n  self.account = function (length) {\n    length = length || 8;\n    var template = '';\n    for (var i = 0; i < length; i++) {\n      template = template + '#';\n    }\n    length = null;\n    return Helpers.replaceSymbolWithNumber(template);\n  };\n\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n  self.accountName = function () {\n    return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n\n  /**\n   * routingNumber\n   *\n   * @method faker.finance.routingNumber\n   */\n  self.routingNumber = function () {\n    var routingNumber = Helpers.replaceSymbolWithNumber('########');\n\n    // Modules 10 straight summation.\n    var sum = 0;\n    for (var i = 0; i < routingNumber.length; i += 3) {\n      sum += Number(routingNumber[i]) * 3;\n      sum += Number(routingNumber[i + 1]) * 7;\n      sum += Number(routingNumber[i + 2]) || 0;\n    }\n    return routingNumber + (Math.ceil(sum / 10) * 10 - sum);\n  };\n\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n  self.mask = function (length, parens, ellipsis) {\n    //set defaults\n    length = length == 0 || !length || typeof length == 'undefined' ? 4 : length;\n    parens = parens === null ? true : parens;\n    ellipsis = ellipsis === null ? true : ellipsis;\n\n    //create a template for length\n    var template = '';\n    for (var i = 0; i < length; i++) {\n      template = template + '#';\n    }\n\n    //prefix with ellipsis\n    template = ellipsis ? ['...', template].join('') : template;\n    template = parens ? ['(', template, ')'].join('') : template;\n\n    //generate random numbers\n    template = Helpers.replaceSymbolWithNumber(template);\n    return template;\n  };\n\n  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.amount = function (min, max, dec, symbol, autoFormat) {\n    min = min || 0;\n    max = max || 1000;\n    dec = dec === undefined ? 2 : dec;\n    symbol = symbol || '';\n    const randValue = faker.datatype.number({\n      max: max,\n      min: min,\n      precision: Math.pow(10, -dec)\n    });\n    var formattedString;\n    if (autoFormat) {\n      formattedString = randValue.toLocaleString(undefined, {\n        minimumFractionDigits: dec\n      });\n    } else {\n      formattedString = randValue.toFixed(dec);\n    }\n    return symbol + formattedString;\n  };\n\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n  self.transactionType = function () {\n    return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n  self.currencyCode = function () {\n    return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n  self.currencyName = function () {\n    return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n  self.currencySymbol = function () {\n    var symbol;\n    while (!symbol) {\n      symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n    }\n    return symbol;\n  };\n\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n  self.bitcoinAddress = function () {\n    var addressLength = faker.datatype.number({\n      min: 25,\n      max: 34\n    });\n    var address = faker.random.arrayElement(['1', '3']);\n    for (var i = 0; i < addressLength - 1; i++) address += faker.random.arrayElement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split(''));\n    return address;\n  };\n\n  /**\n   * litecoinAddress\n   *\n   * @method  faker.finance.litecoinAddress\n   */\n  self.litecoinAddress = function () {\n    var addressLength = faker.datatype.number({\n      min: 26,\n      max: 33\n    });\n    var address = faker.random.arrayElement(['L', 'M', '3']);\n    for (var i = 0; i < addressLength - 1; i++) address += faker.random.arrayElement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split(''));\n    return address;\n  };\n\n  /**\n   * Credit card number\n   * @method faker.finance.creditCardNumber\n   * @param {string} provider | scheme\n  */\n  self.creditCardNumber = function (provider) {\n    provider = provider || \"\";\n    var format, formats;\n    var localeFormat = faker.definitions.finance.credit_card;\n    if (provider in localeFormat) {\n      formats = localeFormat[provider]; // there chould be multiple formats\n      if (typeof formats === \"string\") {\n        format = formats;\n      } else {\n        format = faker.random.arrayElement(formats);\n      }\n    } else if (provider.match(/#/)) {\n      // The user chose an optional scheme\n      format = provider;\n    } else {\n      // Choose a random provider\n      if (typeof localeFormat === 'string') {\n        format = localeFormat;\n      } else if (typeof localeFormat === \"object\") {\n        // Credit cards are in a object structure\n        formats = faker.random.objectElement(localeFormat, \"value\"); // There chould be multiple formats\n        if (typeof formats === \"string\") {\n          format = formats;\n        } else {\n          format = faker.random.arrayElement(formats);\n        }\n      }\n    }\n    format = format.replace(/\\//g, \"\");\n    return Helpers.replaceCreditCardSymbols(format);\n  };\n  /**\n   * Credit card CVV\n   * @method faker.finance.creditCardCVV\n  */\n  self.creditCardCVV = function () {\n    var cvv = \"\";\n    for (var i = 0; i < 3; i++) {\n      cvv += faker.datatype.number({\n        max: 9\n      }).toString();\n    }\n    return cvv;\n  };\n\n  /**\n   * ethereumAddress\n   *\n   * @method  faker.finance.ethereumAddress\n   */\n  self.ethereumAddress = function () {\n    var address = faker.datatype.hexaDecimal(40).toLowerCase();\n    return address;\n  };\n\n  /**\n   * iban\n   *\n   * @param {boolean} [formatted=false] - Return a formatted version of the generated IBAN.\n   * @param {string} [countryCode] - The country code from which you want to generate an IBAN, if none is provided a random country will be used.\n   * @throws Will throw an error if the passed country code is not supported.\n   *\n   * @method  faker.finance.iban\n   */\n  self.iban = function (formatted, countryCode) {\n    var ibanFormat;\n    if (countryCode) {\n      var findFormat = function (currentFormat) {\n        return currentFormat.country === countryCode;\n      };\n      ibanFormat = ibanLib.formats.find(findFormat);\n    } else {\n      ibanFormat = faker.random.arrayElement(ibanLib.formats);\n    }\n    if (!ibanFormat) {\n      throw new Error('Country code ' + countryCode + ' not supported.');\n    }\n    var s = \"\";\n    var count = 0;\n    for (var b = 0; b < ibanFormat.bban.length; b++) {\n      var bban = ibanFormat.bban[b];\n      var c = bban.count;\n      count += bban.count;\n      while (c > 0) {\n        if (bban.type == \"a\") {\n          s += faker.random.arrayElement(ibanLib.alpha);\n        } else if (bban.type == \"c\") {\n          if (faker.datatype.number(100) < 80) {\n            s += faker.datatype.number(9);\n          } else {\n            s += faker.random.arrayElement(ibanLib.alpha);\n          }\n        } else {\n          if (c >= 3 && faker.datatype.number(100) < 30) {\n            if (faker.datatype.boolean()) {\n              s += faker.random.arrayElement(ibanLib.pattern100);\n              c -= 2;\n            } else {\n              s += faker.random.arrayElement(ibanLib.pattern10);\n              c--;\n            }\n          } else {\n            s += faker.datatype.number(9);\n          }\n        }\n        c--;\n      }\n      s = s.substring(0, count);\n    }\n    var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n    if (checksum < 10) {\n      checksum = \"0\" + checksum;\n    }\n    var iban = ibanFormat.country + checksum + s;\n    return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n  self.bic = function () {\n    var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n    var prob = faker.datatype.number(100);\n    return Helpers.replaceSymbols(\"???\") + faker.random.arrayElement(vowels) + faker.random.arrayElement(ibanLib.iso3166) + Helpers.replaceSymbols(\"?\") + \"1\" + (prob < 10 ? Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") : prob < 40 ? Helpers.replaceSymbols(\"###\") : \"\");\n  };\n\n  /**\n   * description\n   *\n   * @method  faker.finance.transactionDescription\n   */\n  self.transactionDescription = function () {\n    var transaction = Helpers.createTransaction();\n    var account = transaction.account;\n    var amount = transaction.amount;\n    var transactionType = transaction.type;\n    var company = transaction.business;\n    var card = faker.finance.mask();\n    var currency = faker.finance.currencyCode();\n    return transactionType + \" transaction at \" + company + \" using card ending with ***\" + card + \" for \" + currency + \" \" + amount + \" in account ***\" + account;\n  };\n};\nmodule['exports'] = Finance;","map":{"version":3,"names":["Finance","faker","ibanLib","require","Helpers","helpers","self","account","length","template","i","replaceSymbolWithNumber","accountName","randomize","definitions","finance","account_type","join","routingNumber","sum","Number","Math","ceil","mask","parens","ellipsis","amount","min","max","dec","symbol","autoFormat","undefined","randValue","datatype","number","precision","pow","formattedString","toLocaleString","minimumFractionDigits","toFixed","transactionType","transaction_type","currencyCode","random","objectElement","currency","currencyName","currencySymbol","bitcoinAddress","addressLength","address","arrayElement","split","litecoinAddress","creditCardNumber","provider","format","formats","localeFormat","credit_card","match","replace","replaceCreditCardSymbols","creditCardCVV","cvv","toString","ethereumAddress","hexaDecimal","toLowerCase","iban","formatted","countryCode","ibanFormat","findFormat","currentFormat","country","find","Error","s","count","b","bban","c","type","alpha","boolean","pattern100","pattern10","substring","checksum","mod97","toDigitString","bic","vowels","prob","replaceSymbols","iso3166","transactionDescription","transaction","createTransaction","company","business","card","module"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/lib/finance.js"],"sourcesContent":["/**\n * @namespace faker.finance\n */\nvar Finance = function (faker) {\n  var ibanLib = require(\"./iban\");\n  var Helpers = faker.helpers,\n      self = this;\n\n  /**\n   * account\n   *\n   * @method faker.finance.account\n   * @param {number} length\n   */\n  self.account = function (length) {\n\n      length = length || 8;\n\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n      length = null;\n      return Helpers.replaceSymbolWithNumber(template);\n  };\n\n  /**\n   * accountName\n   *\n   * @method faker.finance.accountName\n   */\n  self.accountName = function () {\n\n      return [Helpers.randomize(faker.definitions.finance.account_type), 'Account'].join(' ');\n  };\n\n  /**\n   * routingNumber\n   *\n   * @method faker.finance.routingNumber\n   */\n  self.routingNumber = function () {\n\n      var routingNumber = Helpers.replaceSymbolWithNumber('########');\n\n      // Modules 10 straight summation.\n      var sum = 0;\n\n      for (var i = 0; i < routingNumber.length; i += 3) {\n        sum += Number(routingNumber[i]) * 3;\n        sum += Number(routingNumber[i + 1]) * 7;\n        sum += Number(routingNumber[i + 2]) || 0;\n      }\n\n      return routingNumber + (Math.ceil(sum / 10) * 10 - sum);\n  }\n\n  /**\n   * mask\n   *\n   * @method faker.finance.mask\n   * @param {number} length\n   * @param {boolean} parens\n   * @param {boolean} ellipsis\n   */\n  self.mask = function (length, parens, ellipsis) {\n\n      //set defaults\n      length = (length == 0 || !length || typeof length == 'undefined') ? 4 : length;\n      parens = (parens === null) ? true : parens;\n      ellipsis = (ellipsis === null) ? true : ellipsis;\n\n      //create a template for length\n      var template = '';\n\n      for (var i = 0; i < length; i++) {\n          template = template + '#';\n      }\n\n      //prefix with ellipsis\n      template = (ellipsis) ? ['...', template].join('') : template;\n\n      template = (parens) ? ['(', template, ')'].join('') : template;\n\n      //generate random numbers\n      template = Helpers.replaceSymbolWithNumber(template);\n\n      return template;\n  };\n\n  //min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc\n  //NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol\n\n  /**\n   * amount\n   *\n   * @method faker.finance.amount\n   * @param {number} min\n   * @param {number} max\n   * @param {number} dec\n   * @param {string} symbol\n   *\n   * @return {string}\n   */\n  self.amount = function (min, max, dec, symbol, autoFormat) {\n\n      min = min || 0;\n      max = max || 1000;\n      dec = dec === undefined ? 2 : dec;\n      symbol = symbol || '';\n      const randValue = faker.datatype.number({ max: max, min: min, precision: Math.pow(10, -dec) });\n\n      var formattedString;\n      if(autoFormat) {\n        formattedString = randValue.toLocaleString(undefined, {minimumFractionDigits: dec});\n      }\n      else {\n        formattedString = randValue.toFixed(dec);\n      }\n\n      return symbol + formattedString;\n  };\n\n  /**\n   * transactionType\n   *\n   * @method faker.finance.transactionType\n   */\n  self.transactionType = function () {\n      return Helpers.randomize(faker.definitions.finance.transaction_type);\n  };\n\n  /**\n   * currencyCode\n   *\n   * @method faker.finance.currencyCode\n   */\n  self.currencyCode = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency)['code'];\n  };\n\n  /**\n   * currencyName\n   *\n   * @method faker.finance.currencyName\n   */\n  self.currencyName = function () {\n      return faker.random.objectElement(faker.definitions.finance.currency, 'key');\n  };\n\n  /**\n   * currencySymbol\n   *\n   * @method faker.finance.currencySymbol\n   */\n  self.currencySymbol = function () {\n      var symbol;\n\n      while (!symbol) {\n          symbol = faker.random.objectElement(faker.definitions.finance.currency)['symbol'];\n      }\n      return symbol;\n  };\n\n  /**\n   * bitcoinAddress\n   *\n   * @method  faker.finance.bitcoinAddress\n   */\n  self.bitcoinAddress = function () {\n    var addressLength = faker.datatype.number({ min: 25, max: 34 });\n\n    var address = faker.random.arrayElement(['1', '3']);\n\n    for (var i = 0; i < addressLength - 1; i++)\n      address += faker.random.arrayElement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split(''));\n\n    return address;\n  }\n\n/**\n * litecoinAddress\n *\n * @method  faker.finance.litecoinAddress\n */\nself.litecoinAddress = function () {\n  var addressLength = faker.datatype.number({ min: 26, max: 33 });\n\n  var address = faker.random.arrayElement(['L', 'M', '3']);\n\n  for (var i = 0; i < addressLength - 1; i++)\n    address += faker.random.arrayElement('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'.split(''));\n\n  return address;\n}\n\n  /**\n   * Credit card number\n   * @method faker.finance.creditCardNumber\n   * @param {string} provider | scheme\n  */\n  self.creditCardNumber = function(provider){\n    provider = provider || \"\";\n    var format, formats;\n    var localeFormat = faker.definitions.finance.credit_card;\n    if (provider in localeFormat) {\n      formats = localeFormat[provider]; // there chould be multiple formats\n      if (typeof formats === \"string\") {\n        format = formats;\n      } else {\n        format = faker.random.arrayElement(formats);\n      }\n    } else if (provider.match(/#/)) { // The user chose an optional scheme\n      format = provider;\n    } else { // Choose a random provider\n      if (typeof localeFormat === 'string') {\n        format = localeFormat;\n      } else if( typeof localeFormat === \"object\") {\n        // Credit cards are in a object structure\n        formats = faker.random.objectElement(localeFormat, \"value\"); // There chould be multiple formats\n        if (typeof formats === \"string\") {\n          format = formats;\n        } else {\n          format = faker.random.arrayElement(formats);\n        }\n      }\n    }\n    format = format.replace(/\\//g,\"\")\n    return Helpers.replaceCreditCardSymbols(format);\n  };\n  /**\n   * Credit card CVV\n   * @method faker.finance.creditCardCVV\n  */\n  self.creditCardCVV = function() {\n    var cvv = \"\";\n    for (var i = 0; i < 3; i++) {\n      cvv += faker.datatype.number({max:9}).toString();\n    }\n    return cvv;\n  };\n\n  /**\n   * ethereumAddress\n   *\n   * @method  faker.finance.ethereumAddress\n   */\n  self.ethereumAddress = function () {\n    var address = faker.datatype.hexaDecimal(40).toLowerCase();\n    return address;\n  };\n\n  /**\n   * iban\n   *\n   * @param {boolean} [formatted=false] - Return a formatted version of the generated IBAN.\n   * @param {string} [countryCode] - The country code from which you want to generate an IBAN, if none is provided a random country will be used.\n   * @throws Will throw an error if the passed country code is not supported.\n   *\n   * @method  faker.finance.iban\n   */\n  self.iban = function (formatted, countryCode) {\n      var ibanFormat;\n      if (countryCode) {\n          var findFormat = function(currentFormat) { return currentFormat.country === countryCode; };\n          ibanFormat = ibanLib.formats.find(findFormat);\n      } else {\n          ibanFormat = faker.random.arrayElement(ibanLib.formats);\n      }\n\n      if (!ibanFormat) {\n          throw new Error('Country code ' + countryCode + ' not supported.');\n      }\n\n      var s = \"\";\n      var count = 0;\n      for (var b = 0; b < ibanFormat.bban.length; b++) {\n          var bban = ibanFormat.bban[b];\n          var c = bban.count;\n          count += bban.count;\n          while (c > 0) {\n              if (bban.type == \"a\") {\n                  s += faker.random.arrayElement(ibanLib.alpha);\n              } else if (bban.type == \"c\") {\n                  if (faker.datatype.number(100) < 80) {\n                      s += faker.datatype.number(9);\n                  } else {\n                      s += faker.random.arrayElement(ibanLib.alpha);\n                  }\n              } else {\n                  if (c >= 3 && faker.datatype.number(100) < 30) {\n                      if (faker.datatype.boolean()) {\n                          s += faker.random.arrayElement(ibanLib.pattern100);\n                          c -= 2;\n                      } else {\n                          s += faker.random.arrayElement(ibanLib.pattern10);\n                          c--;\n                      }\n                  } else {\n                      s += faker.datatype.number(9);\n                  }\n              }\n              c--;\n          }\n          s = s.substring(0, count);\n      }\n      var checksum = 98 - ibanLib.mod97(ibanLib.toDigitString(s + ibanFormat.country + \"00\"));\n      if (checksum < 10) {\n          checksum = \"0\" + checksum;\n      }\n      var iban = ibanFormat.country + checksum + s;\n      return formatted ? iban.match(/.{1,4}/g).join(\" \") : iban;\n  };\n\n  /**\n   * bic\n   *\n   * @method  faker.finance.bic\n   */\n  self.bic = function () {\n      var vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"];\n      var prob = faker.datatype.number(100);\n      return Helpers.replaceSymbols(\"???\") +\n          faker.random.arrayElement(vowels) +\n          faker.random.arrayElement(ibanLib.iso3166) +\n          Helpers.replaceSymbols(\"?\") + \"1\" +\n          (prob < 10 ?\n              Helpers.replaceSymbols(\"?\" + faker.random.arrayElement(vowels) + \"?\") :\n          prob < 40 ?\n              Helpers.replaceSymbols(\"###\") : \"\");\n  };\n\n  /**\n   * description\n   *\n   * @method  faker.finance.transactionDescription\n   */\n  self.transactionDescription = function() {\n    var transaction = Helpers.createTransaction();\n    var account = transaction.account;\n    var amount = transaction.amount;\n    var transactionType = transaction.type;\n    var company = transaction.business;\n    var card = faker.finance.mask();\n    var currency = faker.finance.currencyCode();\n    return transactionType + \" transaction at \" + company + \" using card ending with ***\" + card + \" for \" + currency + \" \" + amount + \" in account ***\" + account\n  };\n\n};\n\nmodule['exports'] = Finance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}