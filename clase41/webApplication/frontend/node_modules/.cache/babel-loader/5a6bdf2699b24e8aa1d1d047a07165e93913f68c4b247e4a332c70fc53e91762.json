{"ast":null,"code":"/**\n *\n * @namespace faker.name\n */\nfunction Name(faker) {\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n\n      if (typeof gender === 'string') {\n        if (gender.toLowerCase() === 'male') {\n          gender = 0;\n        } else if (gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n      if (typeof gender !== 'number') {\n        if (typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.datatype.number(1);\n        } else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name);\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n  /**\n   * middleName\n   *\n   * @method middleName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.datatype.number(8);\n    var prefix, suffix;\n    // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n    if (typeof gender !== 'number') {\n      gender = faker.datatype.number(1);\n    }\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n      case 1:\n        suffix = faker.name.suffix(gender);\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n    }\n    return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return faker.name.jobDescriptor() + \" \" + faker.name.jobArea() + \" \" + faker.name.jobType();\n  };\n\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n  this.gender = function (binary) {\n    if (binary) {\n      return faker.random.arrayElement(faker.definitions.name.binary_gender);\n    } else {\n      return faker.random.arrayElement(faker.definitions.name.gender);\n    }\n  };\n\n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function () {\n    var descriptor = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n      level = faker.random.arrayElement(faker.definitions.name.title.level),\n      job = faker.random.arrayElement(faker.definitions.name.title.job);\n    return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n}\nmodule['exports'] = Name;","map":{"version":3,"names":["Name","faker","firstName","gender","definitions","name","male_first_name","female_first_name","toLowerCase","first_name","datatype","number","random","arrayElement","lastName","male_last_name","female_last_name","locales","locale","last_name","middleName","male_middle_name","female_middle_name","middle_name","findName","r","prefix","suffix","jobTitle","jobDescriptor","jobArea","jobType","binary","binary_gender","male_prefix","female_prefix","title","descriptor","level","job","module"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/lib/name.js"],"sourcesContent":["/**\n *\n * @namespace faker.name\n */\nfunction Name (faker) {\n\n  /**\n   * firstName\n   *\n   * @method firstName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.firstName = function (gender) {\n    if (typeof faker.definitions.name.male_first_name !== \"undefined\" && typeof faker.definitions.name.female_first_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,\n      // we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )\n\n      if(typeof gender === 'string') {\n        if(gender.toLowerCase() === 'male') {\n          gender = 0;\n        }\n        else if(gender.toLowerCase() === 'female') {\n          gender = 1;\n        }\n      }\n\n      if (typeof gender !== 'number') {\n        if(typeof faker.definitions.name.first_name === \"undefined\") {\n          gender = faker.datatype.number(1);\n        }\n        else {\n          //Fall back to non-gendered names if they exist and gender wasn't specified\n          return faker.random.arrayElement(faker.definitions.name.first_name);\n        }\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.definitions.name.male_first_name)\n      } else {\n        return faker.random.arrayElement(faker.definitions.name.female_first_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.first_name);\n  };\n\n  /**\n   * lastName\n   *\n   * @method lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.lastName = function (gender) {\n    if (typeof faker.definitions.name.male_last_name !== \"undefined\" && typeof faker.definitions.name.female_last_name !== \"undefined\") {\n      // some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian\n      // see above comment of firstName method\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_last_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_last_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.last_name);\n  };\n\n  /**\n   * middleName\n   *\n   * @method middleName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.middleName = function (gender) {\n    if (typeof faker.definitions.name.male_middle_name !== \"undefined\" && typeof faker.definitions.name.female_middle_name !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_middle_name);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_middle_name);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.middle_name);\n  };\n\n  /**\n   * findName\n   *\n   * @method findName\n   * @param {string} firstName\n   * @param {string} lastName\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.findName = function (firstName, lastName, gender) {\n    var r = faker.datatype.number(8);\n    var prefix, suffix;\n    // in particular locales first and last names split by gender,\n    // thus we keep consistency by passing 0 as male and 1 as female\n    if (typeof gender !== 'number') {\n      gender = faker.datatype.number(1);\n    }\n    firstName = firstName || faker.name.firstName(gender);\n    lastName = lastName || faker.name.lastName(gender);\n    switch (r) {\n      case 0:\n        prefix = faker.name.prefix(gender);\n        if (prefix) {\n          return prefix + \" \" + firstName + \" \" + lastName;\n        }\n      case 1:\n        suffix = faker.name.suffix(gender);\n        if (suffix) {\n          return firstName + \" \" + lastName + \" \" + suffix;\n        }\n    }\n\n    return firstName + \" \" + lastName;\n  };\n\n  /**\n   * jobTitle\n   *\n   * @method jobTitle\n   * @memberof faker.name\n   */\n  this.jobTitle = function () {\n    return  faker.name.jobDescriptor() + \" \" +\n      faker.name.jobArea() + \" \" +\n      faker.name.jobType();\n  };\n\n  /**\n   * gender\n   *\n   * @method gender\n   * @memberof faker.name\n   */\n  this.gender = function (binary) {\n    if (binary) {\n      return faker.random.arrayElement(faker.definitions.name.binary_gender);\n    } else {\n      return faker.random.arrayElement(faker.definitions.name.gender);\n    }\n  }\n  \n  /**\n   * prefix\n   *\n   * @method prefix\n   * @param {mixed} gender\n   * @memberof faker.name\n   */\n  this.prefix = function (gender) {\n    if (typeof faker.definitions.name.male_prefix !== \"undefined\" && typeof faker.definitions.name.female_prefix !== \"undefined\") {\n      if (typeof gender !== 'number') {\n        gender = faker.datatype.number(1);\n      }\n      if (gender === 0) {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.male_prefix);\n      } else {\n        return faker.random.arrayElement(faker.locales[faker.locale].name.female_prefix);\n      }\n    }\n    return faker.random.arrayElement(faker.definitions.name.prefix);\n  };\n\n  /**\n   * suffix\n   *\n   * @method suffix\n   * @memberof faker.name\n   */\n  this.suffix = function () {\n    return faker.random.arrayElement(faker.definitions.name.suffix);\n  };\n\n  /**\n   * title\n   *\n   * @method title\n   * @memberof faker.name\n   */\n  this.title = function() {\n    var descriptor  = faker.random.arrayElement(faker.definitions.name.title.descriptor),\n      level       = faker.random.arrayElement(faker.definitions.name.title.level),\n      job         = faker.random.arrayElement(faker.definitions.name.title.job);\n\n    return descriptor + \" \" + level + \" \" + job;\n  };\n\n  /**\n   * jobDescriptor\n   *\n   * @method jobDescriptor\n   * @memberof faker.name\n   */\n  this.jobDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.descriptor);\n  };\n\n  /**\n   * jobArea\n   *\n   * @method jobArea\n   * @memberof faker.name\n   */\n  this.jobArea = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.level);\n  };\n\n  /**\n   * jobType\n   *\n   * @method jobType\n   * @memberof faker.name\n   */\n  this.jobType = function () {\n    return faker.random.arrayElement(faker.definitions.name.title.job);\n  };\n\n}\n\nmodule['exports'] = Name;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}