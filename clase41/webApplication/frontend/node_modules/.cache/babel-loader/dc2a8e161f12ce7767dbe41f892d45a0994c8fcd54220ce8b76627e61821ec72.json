{"ast":null,"code":"/**\n *\n * @namespace faker.lorem\n */\nvar Lorem = function (faker) {\n  var self = this;\n  var Helpers = faker.helpers;\n\n  /**\n   * generates a word of a specified length\n   *\n   * @method faker.lorem.word\n   * @param {number} length length of the word that should be returned. Defaults to a random length\n   */\n  self.word = function (length) {\n    var hasRightLength = function (word) {\n      return word.length === length;\n    };\n    var properLengthWords;\n    if (typeof length === 'undefined') {\n      properLengthWords = faker.definitions.lorem.words;\n    } else {\n      properLengthWords = faker.definitions.lorem.words.filter(hasRightLength);\n    }\n    return faker.random.arrayElement(properLengthWords);\n  };\n\n  /**\n   * generates a space separated list of words\n   *\n   * @method faker.lorem.words\n   * @param {number} num number of words, defaults to 3\n   */\n  self.words = function (num) {\n    if (typeof num == 'undefined') {\n      num = 3;\n    }\n    var words = [];\n    for (var i = 0; i < num; i++) {\n      words.push(faker.lorem.word());\n    }\n    return words.join(' ');\n  };\n\n  /**\n   * sentence\n   *\n   * @method faker.lorem.sentence\n   * @param {number} wordCount defaults to a random number between 3 and 10\n   * @param {number} range\n   */\n  self.sentence = function (wordCount, range) {\n    if (typeof wordCount == 'undefined') {\n      wordCount = faker.datatype.number({\n        min: 3,\n        max: 10\n      });\n    }\n    // if (typeof range == 'undefined') { range = 7; }\n\n    // strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back\n    //return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();\n\n    var sentence = faker.lorem.words(wordCount);\n    return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';\n  };\n\n  /**\n   * slug\n   *\n   * @method faker.lorem.slug\n   * @param {number} wordCount number of words, defaults to 3\n   */\n  self.slug = function (wordCount) {\n    var words = faker.lorem.words(wordCount);\n    return Helpers.slugify(words);\n  };\n\n  /**\n   * sentences\n   *\n   * @method faker.lorem.sentences\n   * @param {number} sentenceCount defautls to a random number between 2 and 6\n   * @param {string} separator defaults to `' '`\n   */\n  self.sentences = function (sentenceCount, separator) {\n    if (typeof sentenceCount === 'undefined') {\n      sentenceCount = faker.datatype.number({\n        min: 2,\n        max: 6\n      });\n    }\n    if (typeof separator == 'undefined') {\n      separator = \" \";\n    }\n    var sentences = [];\n    for (sentenceCount; sentenceCount > 0; sentenceCount--) {\n      sentences.push(faker.lorem.sentence());\n    }\n    return sentences.join(separator);\n  };\n\n  /**\n   * paragraph\n   *\n   * @method faker.lorem.paragraph\n   * @param {number} sentenceCount defaults to 3\n   */\n  self.paragraph = function (sentenceCount) {\n    if (typeof sentenceCount == 'undefined') {\n      sentenceCount = 3;\n    }\n    return faker.lorem.sentences(sentenceCount + faker.datatype.number(3));\n  };\n\n  /**\n   * paragraphs\n   *\n   * @method faker.lorem.paragraphs\n   * @param {number} paragraphCount defaults to 3\n   * @param {string} separator defaults to `'\\n \\r'`\n   */\n  self.paragraphs = function (paragraphCount, separator) {\n    if (typeof separator === \"undefined\") {\n      separator = \"\\n \\r\";\n    }\n    if (typeof paragraphCount == 'undefined') {\n      paragraphCount = 3;\n    }\n    var paragraphs = [];\n    for (paragraphCount; paragraphCount > 0; paragraphCount--) {\n      paragraphs.push(faker.lorem.paragraph());\n    }\n    return paragraphs.join(separator);\n  };\n\n  /**\n   * returns random text based on a random lorem method\n   *\n   * @method faker.lorem.text\n   * @param {number} times\n   */\n  self.text = function loremText(times) {\n    var loremMethods = ['lorem.word', 'lorem.words', 'lorem.sentence', 'lorem.sentences', 'lorem.paragraph', 'lorem.paragraphs', 'lorem.lines'];\n    var randomLoremMethod = faker.random.arrayElement(loremMethods);\n    return faker.fake('{{' + randomLoremMethod + '}}');\n  };\n\n  /**\n   * returns lines of lorem separated by `'\\n'`\n   *\n   * @method faker.lorem.lines\n   * @param {number} lineCount defaults to a random number between 1 and 5\n   */\n  self.lines = function lines(lineCount) {\n    if (typeof lineCount === 'undefined') {\n      lineCount = faker.datatype.number({\n        min: 1,\n        max: 5\n      });\n    }\n    return faker.lorem.sentences(lineCount, '\\n');\n  };\n  return self;\n};\nmodule[\"exports\"] = Lorem;","map":{"version":3,"names":["Lorem","faker","self","Helpers","helpers","word","length","hasRightLength","properLengthWords","definitions","lorem","words","filter","random","arrayElement","num","i","push","join","sentence","wordCount","range","datatype","number","min","max","charAt","toUpperCase","slice","slug","slugify","sentences","sentenceCount","separator","paragraph","paragraphs","paragraphCount","text","loremText","times","loremMethods","randomLoremMethod","fake","lines","lineCount","module"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/lib/lorem.js"],"sourcesContent":["\n/**\n *\n * @namespace faker.lorem\n */\nvar Lorem = function (faker) {\n  var self = this;\n  var Helpers = faker.helpers;\n\n  /**\n   * generates a word of a specified length\n   *\n   * @method faker.lorem.word\n   * @param {number} length length of the word that should be returned. Defaults to a random length\n   */\n  self.word = function (length) {\n    var hasRightLength = function(word) { return word.length === length; };\n    var properLengthWords;\n    if(typeof length === 'undefined') {\n      properLengthWords = faker.definitions.lorem.words;\n    } else {\n      properLengthWords = faker.definitions.lorem.words.filter(hasRightLength);\n    }\n    return faker.random.arrayElement(properLengthWords);\n  };\n\n  /**\n   * generates a space separated list of words\n   *\n   * @method faker.lorem.words\n   * @param {number} num number of words, defaults to 3\n   */\n  self.words = function (num) {\n    if (typeof num == 'undefined') { num = 3; }\n    var words = [];\n    for (var i = 0; i < num; i++) {\n      words.push(faker.lorem.word());\n    }\n    return words.join(' ');\n  };\n\n  /**\n   * sentence\n   *\n   * @method faker.lorem.sentence\n   * @param {number} wordCount defaults to a random number between 3 and 10\n   * @param {number} range\n   */\n  self.sentence = function (wordCount, range) {\n    if (typeof wordCount == 'undefined') { wordCount = faker.datatype.number({ min: 3, max: 10 }); }\n    // if (typeof range == 'undefined') { range = 7; }\n\n    // strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back\n    //return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();\n\n    var sentence = faker.lorem.words(wordCount);\n    return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';\n  };\n\n  /**\n   * slug\n   *\n   * @method faker.lorem.slug\n   * @param {number} wordCount number of words, defaults to 3\n   */\n  self.slug = function (wordCount) {\n    var words = faker.lorem.words(wordCount);\n    return Helpers.slugify(words);\n  };\n\n  /**\n   * sentences\n   *\n   * @method faker.lorem.sentences\n   * @param {number} sentenceCount defautls to a random number between 2 and 6\n   * @param {string} separator defaults to `' '`\n   */\n  self.sentences = function (sentenceCount, separator) {\n    if (typeof sentenceCount === 'undefined') { sentenceCount = faker.datatype.number({ min: 2, max: 6 });}\n    if (typeof separator == 'undefined') { separator = \" \"; }\n    var sentences = [];\n    for (sentenceCount; sentenceCount > 0; sentenceCount--) {\n      sentences.push(faker.lorem.sentence());\n    }\n    return sentences.join(separator);\n  };\n\n  /**\n   * paragraph\n   *\n   * @method faker.lorem.paragraph\n   * @param {number} sentenceCount defaults to 3\n   */\n  self.paragraph = function (sentenceCount) {\n    if (typeof sentenceCount == 'undefined') { sentenceCount = 3; }\n    return faker.lorem.sentences(sentenceCount + faker.datatype.number(3));\n  };\n\n  /**\n   * paragraphs\n   *\n   * @method faker.lorem.paragraphs\n   * @param {number} paragraphCount defaults to 3\n   * @param {string} separator defaults to `'\\n \\r'`\n   */\n  self.paragraphs = function (paragraphCount, separator) {\n    if (typeof separator === \"undefined\") {\n      separator = \"\\n \\r\";\n    }\n    if (typeof paragraphCount == 'undefined') { paragraphCount = 3; }\n    var paragraphs = [];\n    for (paragraphCount; paragraphCount > 0; paragraphCount--) {\n      paragraphs.push(faker.lorem.paragraph());\n    }\n    return paragraphs.join(separator);\n  }\n\n  /**\n   * returns random text based on a random lorem method\n   *\n   * @method faker.lorem.text\n   * @param {number} times\n   */\n  self.text = function loremText (times) {\n    var loremMethods = ['lorem.word', 'lorem.words', 'lorem.sentence', 'lorem.sentences', 'lorem.paragraph', 'lorem.paragraphs', 'lorem.lines'];\n    var randomLoremMethod = faker.random.arrayElement(loremMethods);\n    return faker.fake('{{' + randomLoremMethod + '}}');\n  };\n\n  /**\n   * returns lines of lorem separated by `'\\n'`\n   *\n   * @method faker.lorem.lines\n   * @param {number} lineCount defaults to a random number between 1 and 5\n   */\n  self.lines = function lines (lineCount) {\n    if (typeof lineCount === 'undefined') { lineCount = faker.datatype.number({ min: 1, max: 5 });}\n    return faker.lorem.sentences(lineCount, '\\n')\n  };\n\n  return self;\n};\n\n\nmodule[\"exports\"] = Lorem;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}