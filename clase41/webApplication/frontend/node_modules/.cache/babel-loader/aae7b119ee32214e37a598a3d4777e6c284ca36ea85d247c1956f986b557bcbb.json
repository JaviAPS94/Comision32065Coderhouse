{"ast":null,"code":"/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.past = function (years, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n    var past = date.getTime();\n    past -= faker.datatype.number(range); // some time from now to N years ago, in milliseconds\n    date.setTime(past);\n    return date;\n  };\n\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.future = function (years, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N years later, in milliseconds\n    date.setTime(future);\n    return date;\n  };\n\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.between = function (from, to) {\n    var fromMilli = Date.parse(from);\n    var dateOffset = faker.datatype.number(Date.parse(to) - fromMilli);\n    var newDate = new Date(fromMilli + dateOffset);\n    return newDate;\n  };\n\n  /**\n   * betweens\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.betweens = function (from, to, num) {\n    if (typeof num == 'undefined') {\n      num = 3;\n    }\n    var newDates = [];\n    var fromMilli = Date.parse(from);\n    var dateOffset = (Date.parse(to) - fromMilli) / (num + 1);\n    var lastDate = from;\n    for (var i = 0; i < num; i++) {\n      fromMilli = Date.parse(lastDate);\n      lastDate = new Date(fromMilli + dateOffset);\n      newDates.push(lastDate);\n    }\n    return newDates;\n  };\n\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.recent = function (days, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future -= faker.datatype.number(range); // some time from now to N days ago, in milliseconds\n    date.setTime(future);\n    return date;\n  };\n\n  /**\n   * soon\n   *\n   * @method faker.date.soon\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.soon = function (days, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N days later, in milliseconds\n    date.setTime(future);\n    return date;\n  };\n\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n  self.month = function (options) {\n    options = options || {};\n    var type = 'wide';\n    if (options.abbr) {\n      type = 'abbr';\n    }\n    if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n    var source = faker.definitions.date.month[type];\n    return faker.random.arrayElement(source);\n  };\n\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n  self.weekday = function (options) {\n    options = options || {};\n    var type = 'wide';\n    if (options.abbr) {\n      type = 'abbr';\n    }\n    if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n    var source = faker.definitions.date.weekday[type];\n    return faker.random.arrayElement(source);\n  };\n  return self;\n};\nmodule['exports'] = _Date;","map":{"version":3,"names":["_Date","faker","self","past","years","refDate","date","Date","parse","range","min","max","getTime","datatype","number","setTime","future","between","from","to","fromMilli","dateOffset","newDate","betweens","num","newDates","lastDate","i","push","recent","days","soon","month","options","type","abbr","context","definitions","source","random","arrayElement","weekday","module"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/lib/date.js"],"sourcesContent":["/**\n *\n * @namespace faker.date\n */\nvar _Date = function (faker) {\n  var self = this;\n  /**\n   * past\n   *\n   * @method faker.date.past\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.past = function (years, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n\n    var past = date.getTime();\n    past -= faker.datatype.number(range); // some time from now to N years ago, in milliseconds\n    date.setTime(past);\n\n    return date;\n  };\n\n  /**\n   * future\n   *\n   * @method faker.date.future\n   * @param {number} years\n   * @param {date} refDate\n   */\n  self.future = function (years, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (years || 1) * 365 * 24 * 3600 * 1000\n    };\n\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N years later, in milliseconds\n    date.setTime(future);\n\n    return date;\n  };\n\n  /**\n   * between\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.between = function (from, to) {\n    var fromMilli = Date.parse(from);\n    var dateOffset = faker.datatype.number(Date.parse(to) - fromMilli);\n\n    var newDate = new Date(fromMilli + dateOffset);\n\n    return newDate;\n  };\n\n  /**\n   * betweens\n   *\n   * @method faker.date.between\n   * @param {date} from\n   * @param {date} to\n   */\n  self.betweens = function (from, to, num) {\n    if (typeof num == 'undefined') { num = 3; }\n    var newDates = [];\n    var fromMilli = Date.parse(from);\n    var dateOffset = (Date.parse(to) - fromMilli) / ( num + 1 );\n    var lastDate = from\n    for (var i = 0; i < num; i++) {\n      fromMilli = Date.parse(lastDate);\n      lastDate = new Date(fromMilli + dateOffset)\n      newDates.push(lastDate)\n    }\n    return newDates;\n  };\n\n\n  /**\n   * recent\n   *\n   * @method faker.date.recent\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.recent = function (days, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n\n    var future = date.getTime();\n    future -= faker.datatype.number(range); // some time from now to N days ago, in milliseconds\n    date.setTime(future);\n\n    return date;\n  };\n\n  /**\n   * soon\n   *\n   * @method faker.date.soon\n   * @param {number} days\n   * @param {date} refDate\n   */\n  self.soon = function (days, refDate) {\n    var date = new Date();\n    if (typeof refDate !== \"undefined\") {\n      date = new Date(Date.parse(refDate));\n    }\n\n    var range = {\n      min: 1000,\n      max: (days || 1) * 24 * 3600 * 1000\n    };\n\n    var future = date.getTime();\n    future += faker.datatype.number(range); // some time from now to N days later, in milliseconds\n    date.setTime(future);\n\n    return date;\n  };\n\n  /**\n   * month\n   *\n   * @method faker.date.month\n   * @param {object} options\n   */\n  self.month = function (options) {\n    options = options || {};\n\n    var type = 'wide';\n    if (options.abbr) {\n      type = 'abbr';\n    }\n    if (options.context && typeof faker.definitions.date.month[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.month[type];\n\n    return faker.random.arrayElement(source);\n  };\n\n  /**\n   * weekday\n   *\n   * @param {object} options\n   * @method faker.date.weekday\n   */\n  self.weekday = function (options) {\n    options = options || {};\n\n    var type = 'wide';\n    if (options.abbr) {\n      type = 'abbr';\n    }\n    if (options.context && typeof faker.definitions.date.weekday[type + '_context'] !== 'undefined') {\n      type += '_context';\n    }\n\n    var source = faker.definitions.date.weekday[type];\n\n    return faker.random.arrayElement(source);\n  };\n\n  return self;\n\n};\n\nmodule['exports'] = _Date;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,KAAK,GAAG,UAAUC,KAAK,EAAE;EAC3B,IAAIC,IAAI,GAAG,IAAI;EACf;AACF;AACA;AACA;AACA;AACA;AACA;EACEA,IAAI,CAACC,IAAI,GAAG,UAAUC,KAAK,EAAEC,OAAO,EAAE;IACpC,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAI,OAAOF,OAAO,KAAK,WAAW,EAAE;MAClCC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC;IACtC;IAEA,IAAII,KAAK,GAAG;MACVC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,CAACP,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG;IACxC,CAAC;IAED,IAAID,IAAI,GAAGG,IAAI,CAACM,OAAO,EAAE;IACzBT,IAAI,IAAIF,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC;IACtCH,IAAI,CAACS,OAAO,CAACZ,IAAI,CAAC;IAElB,OAAOG,IAAI;EACb,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,IAAI,CAACc,MAAM,GAAG,UAAUZ,KAAK,EAAEC,OAAO,EAAE;IACtC,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAI,OAAOF,OAAO,KAAK,WAAW,EAAE;MAClCC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC;IACtC;IAEA,IAAII,KAAK,GAAG;MACVC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,CAACP,KAAK,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG;IACxC,CAAC;IAED,IAAIY,MAAM,GAAGV,IAAI,CAACM,OAAO,EAAE;IAC3BI,MAAM,IAAIf,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC;IACxCH,IAAI,CAACS,OAAO,CAACC,MAAM,CAAC;IAEpB,OAAOV,IAAI;EACb,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,IAAI,CAACe,OAAO,GAAG,UAAUC,IAAI,EAAEC,EAAE,EAAE;IACjC,IAAIC,SAAS,GAAGb,IAAI,CAACC,KAAK,CAACU,IAAI,CAAC;IAChC,IAAIG,UAAU,GAAGpB,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACP,IAAI,CAACC,KAAK,CAACW,EAAE,CAAC,GAAGC,SAAS,CAAC;IAElE,IAAIE,OAAO,GAAG,IAAIf,IAAI,CAACa,SAAS,GAAGC,UAAU,CAAC;IAE9C,OAAOC,OAAO;EAChB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEpB,IAAI,CAACqB,QAAQ,GAAG,UAAUL,IAAI,EAAEC,EAAE,EAAEK,GAAG,EAAE;IACvC,IAAI,OAAOA,GAAG,IAAI,WAAW,EAAE;MAAEA,GAAG,GAAG,CAAC;IAAE;IAC1C,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIL,SAAS,GAAGb,IAAI,CAACC,KAAK,CAACU,IAAI,CAAC;IAChC,IAAIG,UAAU,GAAG,CAACd,IAAI,CAACC,KAAK,CAACW,EAAE,CAAC,GAAGC,SAAS,KAAMI,GAAG,GAAG,CAAC,CAAE;IAC3D,IAAIE,QAAQ,GAAGR,IAAI;IACnB,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;MAC5BP,SAAS,GAAGb,IAAI,CAACC,KAAK,CAACkB,QAAQ,CAAC;MAChCA,QAAQ,GAAG,IAAInB,IAAI,CAACa,SAAS,GAAGC,UAAU,CAAC;MAC3CI,QAAQ,CAACG,IAAI,CAACF,QAAQ,CAAC;IACzB;IACA,OAAOD,QAAQ;EACjB,CAAC;;EAGD;AACF;AACA;AACA;AACA;AACA;AACA;EACEvB,IAAI,CAAC2B,MAAM,GAAG,UAAUC,IAAI,EAAEzB,OAAO,EAAE;IACrC,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAI,OAAOF,OAAO,KAAK,WAAW,EAAE;MAClCC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC;IACtC;IAEA,IAAII,KAAK,GAAG;MACVC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,CAACmB,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG;IACjC,CAAC;IAED,IAAId,MAAM,GAAGV,IAAI,CAACM,OAAO,EAAE;IAC3BI,MAAM,IAAIf,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC;IACxCH,IAAI,CAACS,OAAO,CAACC,MAAM,CAAC;IAEpB,OAAOV,IAAI;EACb,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEJ,IAAI,CAAC6B,IAAI,GAAG,UAAUD,IAAI,EAAEzB,OAAO,EAAE;IACnC,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACrB,IAAI,OAAOF,OAAO,KAAK,WAAW,EAAE;MAClCC,IAAI,GAAG,IAAIC,IAAI,CAACA,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC;IACtC;IAEA,IAAII,KAAK,GAAG;MACVC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,CAACmB,IAAI,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG;IACjC,CAAC;IAED,IAAId,MAAM,GAAGV,IAAI,CAACM,OAAO,EAAE;IAC3BI,MAAM,IAAIf,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC;IACxCH,IAAI,CAACS,OAAO,CAACC,MAAM,CAAC;IAEpB,OAAOV,IAAI;EACb,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACEJ,IAAI,CAAC8B,KAAK,GAAG,UAAUC,OAAO,EAAE;IAC9BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB,IAAIC,IAAI,GAAG,MAAM;IACjB,IAAID,OAAO,CAACE,IAAI,EAAE;MAChBD,IAAI,GAAG,MAAM;IACf;IACA,IAAID,OAAO,CAACG,OAAO,IAAI,OAAOnC,KAAK,CAACoC,WAAW,CAAC/B,IAAI,CAAC0B,KAAK,CAACE,IAAI,GAAG,UAAU,CAAC,KAAK,WAAW,EAAE;MAC7FA,IAAI,IAAI,UAAU;IACpB;IAEA,IAAII,MAAM,GAAGrC,KAAK,CAACoC,WAAW,CAAC/B,IAAI,CAAC0B,KAAK,CAACE,IAAI,CAAC;IAE/C,OAAOjC,KAAK,CAACsC,MAAM,CAACC,YAAY,CAACF,MAAM,CAAC;EAC1C,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACEpC,IAAI,CAACuC,OAAO,GAAG,UAAUR,OAAO,EAAE;IAChCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAEvB,IAAIC,IAAI,GAAG,MAAM;IACjB,IAAID,OAAO,CAACE,IAAI,EAAE;MAChBD,IAAI,GAAG,MAAM;IACf;IACA,IAAID,OAAO,CAACG,OAAO,IAAI,OAAOnC,KAAK,CAACoC,WAAW,CAAC/B,IAAI,CAACmC,OAAO,CAACP,IAAI,GAAG,UAAU,CAAC,KAAK,WAAW,EAAE;MAC/FA,IAAI,IAAI,UAAU;IACpB;IAEA,IAAII,MAAM,GAAGrC,KAAK,CAACoC,WAAW,CAAC/B,IAAI,CAACmC,OAAO,CAACP,IAAI,CAAC;IAEjD,OAAOjC,KAAK,CAACsC,MAAM,CAACC,YAAY,CAACF,MAAM,CAAC;EAC1C,CAAC;EAED,OAAOpC,IAAI;AAEb,CAAC;AAEDwC,MAAM,CAAC,SAAS,CAAC,GAAG1C,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}