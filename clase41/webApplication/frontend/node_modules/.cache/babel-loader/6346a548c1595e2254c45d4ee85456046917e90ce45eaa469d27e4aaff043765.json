{"ast":null,"code":"/**\n *\n * @namespace faker.company\n */\nvar Company = function (faker) {\n  var self = this;\n  var f = faker.fake;\n\n  /**\n   * suffixes\n   *\n   * @method faker.company.suffixes\n   */\n  this.suffixes = function () {\n    // Don't want the source array exposed to modification, so return a copy\n    return faker.definitions.company.suffix.slice(0);\n  };\n\n  /**\n   * companyName\n   *\n   * @method faker.company.companyName\n   * @param {string} format\n   */\n  this.companyName = function (format) {\n    var formats = ['{{name.lastName}} {{company.companySuffix}}', '{{name.lastName}} - {{name.lastName}}', '{{name.lastName}}, {{name.lastName}} and {{name.lastName}}'];\n    if (typeof format !== \"number\") {\n      format = faker.datatype.number(formats.length - 1);\n    }\n    return f(formats[format]);\n  };\n\n  /**\n   * companySuffix\n   *\n   * @method faker.company.companySuffix\n   */\n  this.companySuffix = function () {\n    return faker.random.arrayElement(faker.company.suffixes());\n  };\n\n  /**\n   * catchPhrase\n   *\n   * @method faker.company.catchPhrase\n   */\n  this.catchPhrase = function () {\n    return f('{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}');\n  };\n\n  /**\n   * bs\n   *\n   * @method faker.company.bs\n   */\n  this.bs = function () {\n    return f('{{company.bsBuzz}} {{company.bsAdjective}} {{company.bsNoun}}');\n  };\n\n  /**\n   * catchPhraseAdjective\n   *\n   * @method faker.company.catchPhraseAdjective\n   */\n  this.catchPhraseAdjective = function () {\n    return faker.random.arrayElement(faker.definitions.company.adjective);\n  };\n\n  /**\n   * catchPhraseDescriptor\n   *\n   * @method faker.company.catchPhraseDescriptor\n   */\n  this.catchPhraseDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.company.descriptor);\n  };\n\n  /**\n   * catchPhraseNoun\n   *\n   * @method faker.company.catchPhraseNoun\n   */\n  this.catchPhraseNoun = function () {\n    return faker.random.arrayElement(faker.definitions.company.noun);\n  };\n\n  /**\n   * bsAdjective\n   *\n   * @method faker.company.bsAdjective\n   */\n  this.bsAdjective = function () {\n    return faker.random.arrayElement(faker.definitions.company.bs_adjective);\n  };\n\n  /**\n   * bsBuzz\n   *\n   * @method faker.company.bsBuzz\n   */\n  this.bsBuzz = function () {\n    return faker.random.arrayElement(faker.definitions.company.bs_verb);\n  };\n\n  /**\n   * bsNoun\n   *\n   * @method faker.company.bsNoun\n   */\n  this.bsNoun = function () {\n    return faker.random.arrayElement(faker.definitions.company.bs_noun);\n  };\n};\nmodule['exports'] = Company;","map":{"version":3,"names":["Company","faker","self","f","fake","suffixes","definitions","company","suffix","slice","companyName","format","formats","datatype","number","length","companySuffix","random","arrayElement","catchPhrase","bs","catchPhraseAdjective","adjective","catchPhraseDescriptor","descriptor","catchPhraseNoun","noun","bsAdjective","bs_adjective","bsBuzz","bs_verb","bsNoun","bs_noun","module"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/lib/company.js"],"sourcesContent":["/**\n *\n * @namespace faker.company\n */\nvar Company = function (faker) {\n  \n  var self = this;\n  var f = faker.fake;\n  \n  /**\n   * suffixes\n   *\n   * @method faker.company.suffixes\n   */\n  this.suffixes = function () {\n    // Don't want the source array exposed to modification, so return a copy\n    return faker.definitions.company.suffix.slice(0);\n  }\n\n  /**\n   * companyName\n   *\n   * @method faker.company.companyName\n   * @param {string} format\n   */\n  this.companyName = function (format) {\n\n    var formats = [\n      '{{name.lastName}} {{company.companySuffix}}',\n      '{{name.lastName}} - {{name.lastName}}',\n      '{{name.lastName}}, {{name.lastName}} and {{name.lastName}}'\n    ];\n\n    if (typeof format !== \"number\") {\n      format = faker.datatype.number(formats.length - 1);\n    }\n\n    return f(formats[format]);\n  }\n\n  /**\n   * companySuffix\n   *\n   * @method faker.company.companySuffix\n   */\n  this.companySuffix = function () {\n    return faker.random.arrayElement(faker.company.suffixes());\n  }\n\n  /**\n   * catchPhrase\n   *\n   * @method faker.company.catchPhrase\n   */\n  this.catchPhrase = function () {\n    return f('{{company.catchPhraseAdjective}} {{company.catchPhraseDescriptor}} {{company.catchPhraseNoun}}')\n  }\n\n  /**\n   * bs\n   *\n   * @method faker.company.bs\n   */\n  this.bs = function () {\n    return f('{{company.bsBuzz}} {{company.bsAdjective}} {{company.bsNoun}}');\n  }\n\n  /**\n   * catchPhraseAdjective\n   *\n   * @method faker.company.catchPhraseAdjective\n   */\n  this.catchPhraseAdjective = function () {\n    return faker.random.arrayElement(faker.definitions.company.adjective);\n  }\n\n  /**\n   * catchPhraseDescriptor\n   *\n   * @method faker.company.catchPhraseDescriptor\n   */\n  this.catchPhraseDescriptor = function () {\n    return faker.random.arrayElement(faker.definitions.company.descriptor);\n  }\n\n  /**\n   * catchPhraseNoun\n   *\n   * @method faker.company.catchPhraseNoun\n   */\n  this.catchPhraseNoun = function () {\n    return faker.random.arrayElement(faker.definitions.company.noun);\n  }\n\n  /**\n   * bsAdjective\n   *\n   * @method faker.company.bsAdjective\n   */\n  this.bsAdjective = function () {\n    return faker.random.arrayElement(faker.definitions.company.bs_adjective);\n  }\n\n  /**\n   * bsBuzz\n   *\n   * @method faker.company.bsBuzz\n   */\n  this.bsBuzz = function () {\n    return faker.random.arrayElement(faker.definitions.company.bs_verb);\n  }\n\n  /**\n   * bsNoun\n   *\n   * @method faker.company.bsNoun\n   */\n  this.bsNoun = function () {\n    return faker.random.arrayElement(faker.definitions.company.bs_noun);\n  }\n  \n}\n\nmodule['exports'] = Company;"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,OAAO,GAAG,UAAUC,KAAK,EAAE;EAE7B,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,CAAC,GAAGF,KAAK,CAACG,IAAI;;EAElB;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,QAAQ,GAAG,YAAY;IAC1B;IACA,OAAOJ,KAAK,CAACK,WAAW,CAACC,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClD,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACE,IAAI,CAACC,WAAW,GAAG,UAAUC,MAAM,EAAE;IAEnC,IAAIC,OAAO,GAAG,CACZ,6CAA6C,EAC7C,uCAAuC,EACvC,4DAA4D,CAC7D;IAED,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;MAC9BA,MAAM,GAAGV,KAAK,CAACY,QAAQ,CAACC,MAAM,CAACF,OAAO,CAACG,MAAM,GAAG,CAAC,CAAC;IACpD;IAEA,OAAOZ,CAAC,CAACS,OAAO,CAACD,MAAM,CAAC,CAAC;EAC3B,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACK,aAAa,GAAG,YAAY;IAC/B,OAAOf,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACM,OAAO,CAACF,QAAQ,EAAE,CAAC;EAC5D,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACc,WAAW,GAAG,YAAY;IAC7B,OAAOhB,CAAC,CAAC,gGAAgG,CAAC;EAC5G,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACiB,EAAE,GAAG,YAAY;IACpB,OAAOjB,CAAC,CAAC,+DAA+D,CAAC;EAC3E,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACkB,oBAAoB,GAAG,YAAY;IACtC,OAAOpB,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACK,WAAW,CAACC,OAAO,CAACe,SAAS,CAAC;EACvE,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,qBAAqB,GAAG,YAAY;IACvC,OAAOtB,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACK,WAAW,CAACC,OAAO,CAACiB,UAAU,CAAC;EACxE,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,eAAe,GAAG,YAAY;IACjC,OAAOxB,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACK,WAAW,CAACC,OAAO,CAACmB,IAAI,CAAC;EAClE,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,WAAW,GAAG,YAAY;IAC7B,OAAO1B,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACK,WAAW,CAACC,OAAO,CAACqB,YAAY,CAAC;EAC1E,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,MAAM,GAAG,YAAY;IACxB,OAAO5B,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACK,WAAW,CAACC,OAAO,CAACuB,OAAO,CAAC;EACrE,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,IAAI,CAACC,MAAM,GAAG,YAAY;IACxB,OAAO9B,KAAK,CAACgB,MAAM,CAACC,YAAY,CAACjB,KAAK,CAACK,WAAW,CAACC,OAAO,CAACyB,OAAO,CAAC;EACrE,CAAC;AAEH,CAAC;AAEDC,MAAM,CAAC,SAAS,CAAC,GAAGjC,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}