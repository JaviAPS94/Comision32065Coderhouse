{"ast":null,"code":"/**\r\n *\r\n * @namespace faker.datatype\r\n */\nfunction Datatype(faker, seed) {\n  // Use a user provided seed if it is an array or number\n  if (Array.isArray(seed) && seed.length) {\n    faker.mersenne.seed_array(seed);\n  } else if (!isNaN(seed)) {\n    faker.mersenne.seed(seed);\n  }\n\n  /**\r\n     * returns a single random number based on a max number or range\r\n     *\r\n     * @method faker.datatype.number\r\n     * @param {mixed} options {min, max, precision}\r\n     */\n  this.number = function (options) {\n    if (typeof options === \"number\") {\n      options = {\n        max: options\n      };\n    }\n    options = options || {};\n    if (typeof options.min === \"undefined\") {\n      options.min = 0;\n    }\n    if (typeof options.max === \"undefined\") {\n      options.max = 99999;\n    }\n    if (typeof options.precision === \"undefined\") {\n      options.precision = 1;\n    }\n\n    // Make the range inclusive of the max value\n    var max = options.max;\n    if (max >= 0) {\n      max += options.precision;\n    }\n    var randomNumber = Math.floor(faker.mersenne.rand(max / options.precision, options.min / options.precision));\n    // Workaround problem in Float point arithmetics for e.g. 6681493 / 0.01\n    randomNumber = randomNumber / (1 / options.precision);\n    return randomNumber;\n  };\n\n  /**\r\n     * returns a single random floating-point number based on a max number or range\r\n     *\r\n     * @method faker.datatype.float\r\n     * @param {mixed} options\r\n     */\n  this.float = function (options) {\n    if (typeof options === \"number\") {\n      options = {\n        precision: options\n      };\n    }\n    options = options || {};\n    var opts = {};\n    for (var p in options) {\n      opts[p] = options[p];\n    }\n    if (typeof opts.precision === 'undefined') {\n      opts.precision = 0.01;\n    }\n    return faker.datatype.number(opts);\n  };\n\n  /**\r\n     * method returns a Date object using a random number of milliseconds since 1. Jan 1970 UTC\r\n     * Caveat: seeding is not working\r\n     *\r\n     * @method faker.datatype.datetime\r\n     * @param {mixed} options, pass min OR max as number of milliseconds since 1. Jan 1970 UTC\r\n     */\n  this.datetime = function (options) {\n    if (typeof options === \"number\") {\n      options = {\n        max: options\n      };\n    }\n    var minMax = 8640000000000000;\n    options = options || {};\n    if (typeof options.min === \"undefined\" || options.min < minMax * -1) {\n      options.min = new Date().setFullYear(1990, 1, 1);\n    }\n    if (typeof options.max === \"undefined\" || options.max > minMax) {\n      options.max = new Date().setFullYear(2100, 1, 1);\n    }\n    var random = faker.datatype.number(options);\n    return new Date(random);\n  };\n\n  /**\r\n     * Returns a string, containing UTF-16 chars between 33 and 125 ('!' to '}')\r\n     *\r\n     *\r\n     * @method faker.datatype.string\r\n     * @param { number } length: length of generated string, default = 10, max length = 2^20\r\n     */\n  this.string = function (length) {\n    if (length === undefined) {\n      length = 10;\n    }\n    var maxLength = Math.pow(2, 20);\n    if (length >= maxLength) {\n      length = maxLength;\n    }\n    var charCodeOption = {\n      min: 33,\n      max: 125\n    };\n    var returnString = '';\n    for (var i = 0; i < length; i++) {\n      returnString += String.fromCharCode(faker.datatype.number(charCodeOption));\n    }\n    return returnString;\n  };\n\n  /**\r\n     * uuid\r\n     *\r\n     * @method faker.datatype.uuid\r\n     */\n  this.uuid = function () {\n    var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\n    var replacePlaceholders = function (placeholder) {\n      var random = faker.datatype.number({\n        min: 0,\n        max: 15\n      });\n      var value = placeholder == 'x' ? random : random & 0x3 | 0x8;\n      return value.toString(16);\n    };\n    return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);\n  };\n\n  /**\r\n     * boolean\r\n     *\r\n     * @method faker.datatype.boolean\r\n     */\n  this.boolean = function () {\n    return !!faker.datatype.number(1);\n  };\n\n  /**\r\n     * hexaDecimal\r\n     *\r\n     * @method faker.datatype.hexaDecimal\r\n     * @param {number} count defaults to 1\r\n     */\n  this.hexaDecimal = function hexaDecimal(count) {\n    if (typeof count === \"undefined\") {\n      count = 1;\n    }\n    var wholeString = \"\";\n    for (var i = 0; i < count; i++) {\n      wholeString += faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]);\n    }\n    return \"0x\" + wholeString;\n  };\n\n  /**\r\n     * returns json object with 7 pre-defined properties\r\n     *\r\n     * @method faker.datatype.json\r\n     */\n  this.json = function json() {\n    var properties = ['foo', 'bar', 'bike', 'a', 'b', 'name', 'prop'];\n    var returnObject = {};\n    properties.forEach(function (prop) {\n      returnObject[prop] = faker.datatype.boolean() ? faker.datatype.string() : faker.datatype.number();\n    });\n    return JSON.stringify(returnObject);\n  };\n\n  /**\r\n     * returns an array with values generated by faker.datatype.number and faker.datatype.string\r\n     *\r\n     * @method faker.datatype.array\r\n     * @param { number } length of the returned array\r\n     */\n\n  this.array = function array(length) {\n    if (length === undefined) {\n      length = 10;\n    }\n    var returnArray = new Array(length);\n    for (var i = 0; i < length; i++) {\n      returnArray[i] = faker.datatype.boolean() ? faker.datatype.string() : faker.datatype.number();\n    }\n    return returnArray;\n  };\n  return this;\n}\nmodule['exports'] = Datatype;","map":{"version":3,"names":["Datatype","faker","seed","Array","isArray","length","mersenne","seed_array","isNaN","number","options","max","min","precision","randomNumber","Math","floor","rand","float","opts","p","datatype","datetime","minMax","Date","setFullYear","random","string","undefined","maxLength","pow","charCodeOption","returnString","i","String","fromCharCode","uuid","RFC4122_TEMPLATE","replacePlaceholders","placeholder","value","toString","replace","boolean","hexaDecimal","count","wholeString","arrayElement","json","properties","returnObject","forEach","prop","JSON","stringify","array","returnArray","module"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/lib/datatype.js"],"sourcesContent":["/**\r\n *\r\n * @namespace faker.datatype\r\n */\r\nfunction Datatype (faker, seed) {\r\n  // Use a user provided seed if it is an array or number\r\n  if (Array.isArray(seed) && seed.length) {\r\n    faker.mersenne.seed_array(seed);\r\n  }\r\n  else if(!isNaN(seed)) {\r\n    faker.mersenne.seed(seed);\r\n  }\r\n\r\n  /**\r\n     * returns a single random number based on a max number or range\r\n     *\r\n     * @method faker.datatype.number\r\n     * @param {mixed} options {min, max, precision}\r\n     */\r\n  this.number = function (options) {\r\n\r\n    if (typeof options === \"number\") {\r\n      options = {\r\n        max: options\r\n      };\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    if (typeof options.min === \"undefined\") {\r\n      options.min = 0;\r\n    }\r\n\r\n    if (typeof options.max === \"undefined\") {\r\n      options.max = 99999;\r\n    }\r\n    if (typeof options.precision === \"undefined\") {\r\n      options.precision = 1;\r\n    }\r\n\r\n    // Make the range inclusive of the max value\r\n    var max = options.max;\r\n    if (max >= 0) {\r\n      max += options.precision;\r\n    }\r\n\r\n    var randomNumber = Math.floor(\r\n      faker.mersenne.rand(max / options.precision, options.min / options.precision));\r\n    // Workaround problem in Float point arithmetics for e.g. 6681493 / 0.01\r\n    randomNumber = randomNumber / (1 / options.precision);\r\n\r\n    return randomNumber;\r\n\r\n  };\r\n\r\n  /**\r\n     * returns a single random floating-point number based on a max number or range\r\n     *\r\n     * @method faker.datatype.float\r\n     * @param {mixed} options\r\n     */\r\n  this.float = function (options) {\r\n    if (typeof options === \"number\") {\r\n      options = {\r\n        precision: options\r\n      };\r\n    }\r\n    options = options || {};\r\n    var opts = {};\r\n    for (var p in options) {\r\n      opts[p] = options[p];\r\n    }\r\n    if (typeof opts.precision === 'undefined') {\r\n      opts.precision = 0.01;\r\n    }\r\n    return faker.datatype.number(opts);\r\n  };\r\n\r\n  /**\r\n     * method returns a Date object using a random number of milliseconds since 1. Jan 1970 UTC\r\n     * Caveat: seeding is not working\r\n     *\r\n     * @method faker.datatype.datetime\r\n     * @param {mixed} options, pass min OR max as number of milliseconds since 1. Jan 1970 UTC\r\n     */\r\n  this.datetime = function (options) {\r\n    if (typeof options === \"number\") {\r\n      options = {\r\n        max: options\r\n      };\r\n    }\r\n\r\n    var minMax = 8640000000000000;\r\n\r\n    options = options || {};\r\n\r\n    if (typeof options.min === \"undefined\" || options.min < minMax*-1) {\r\n      options.min = new Date().setFullYear(1990, 1, 1);\r\n    }\r\n\r\n    if (typeof options.max === \"undefined\" || options.max > minMax) {\r\n      options.max = new Date().setFullYear(2100,1,1);\r\n    }\r\n\r\n    var random = faker.datatype.number(options);\r\n    return new Date(random);\r\n  };\r\n\r\n  /**\r\n     * Returns a string, containing UTF-16 chars between 33 and 125 ('!' to '}')\r\n     *\r\n     *\r\n     * @method faker.datatype.string\r\n     * @param { number } length: length of generated string, default = 10, max length = 2^20\r\n     */\r\n  this.string = function (length) {\r\n    if(length === undefined ){\r\n      length = 10;\r\n    }\r\n\r\n    var maxLength = Math.pow(2, 20);\r\n    if(length >= (maxLength)){\r\n      length = maxLength;\r\n    }\r\n\r\n    var charCodeOption = {\r\n      min: 33,\r\n      max: 125\r\n    };\r\n\r\n    var returnString = '';\r\n\r\n    for(var i = 0; i < length; i++){\r\n      returnString += String.fromCharCode(faker.datatype.number(charCodeOption));\r\n    }\r\n    return returnString;\r\n  };\r\n\r\n  /**\r\n     * uuid\r\n     *\r\n     * @method faker.datatype.uuid\r\n     */\r\n  this.uuid = function () {\r\n    var RFC4122_TEMPLATE = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n    var replacePlaceholders = function (placeholder) {\r\n      var random = faker.datatype.number({ min: 0, max: 15 });\r\n      var value = placeholder == 'x' ? random : (random &0x3 | 0x8);\r\n      return value.toString(16);\r\n    };\r\n    return RFC4122_TEMPLATE.replace(/[xy]/g, replacePlaceholders);\r\n  };\r\n\r\n  /**\r\n     * boolean\r\n     *\r\n     * @method faker.datatype.boolean\r\n     */\r\n  this.boolean = function () {\r\n    return !!faker.datatype.number(1);\r\n  };\r\n\r\n\r\n  /**\r\n     * hexaDecimal\r\n     *\r\n     * @method faker.datatype.hexaDecimal\r\n     * @param {number} count defaults to 1\r\n     */\r\n  this.hexaDecimal = function hexaDecimal(count) {\r\n    if (typeof count === \"undefined\") {\r\n      count = 1;\r\n    }\r\n\r\n    var wholeString = \"\";\r\n    for(var i = 0; i < count; i++) {\r\n      wholeString += faker.random.arrayElement([\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]);\r\n    }\r\n\r\n    return \"0x\"+wholeString;\r\n  };\r\n\r\n  /**\r\n     * returns json object with 7 pre-defined properties\r\n     *\r\n     * @method faker.datatype.json\r\n     */\r\n  this.json = function json() {\r\n\r\n    var properties = ['foo', 'bar', 'bike', 'a', 'b', 'name', 'prop'];\r\n\r\n    var returnObject = {};\r\n    properties.forEach(function(prop){\r\n      returnObject[prop] = faker.datatype.boolean() ?\r\n        faker.datatype.string() : faker.datatype.number();\r\n    });\r\n\r\n    return JSON.stringify(returnObject);\r\n  };\r\n\r\n  /**\r\n     * returns an array with values generated by faker.datatype.number and faker.datatype.string\r\n     *\r\n     * @method faker.datatype.array\r\n     * @param { number } length of the returned array\r\n     */\r\n\r\n  this.array = function array(length) {\r\n\r\n\r\n    if(length === undefined){\r\n      length = 10;\r\n    }\r\n    var returnArray = new Array(length);\r\n    for(var i = 0; i < length; i++){\r\n      returnArray[i] = faker.datatype.boolean() ?\r\n        faker.datatype.string() : faker.datatype.number();\r\n    }\r\n    return returnArray;\r\n\r\n  };\r\n\r\n  return this;\r\n}\r\n\r\nmodule['exports'] = Datatype;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}