{"ast":null,"code":"// the `unique` module\nvar unique = {};\n\n// global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\nvar found = {};\n\n// global exclude list of results\n// defaults to nothing excluded\nvar exclude = [];\n\n// current iteration or retries of unique.exec ( current loop depth )\nvar currentIterations = 0;\n\n// uniqueness compare function\n// default behavior is to check value as key against object hash\nvar defaultCompare = function (obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n  return 0;\n};\n\n// common error handler for messages\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()');\n};\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n\n  var now = new Date().getTime();\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n  var startTime = opts.startTime;\n\n  // support single exclude argument as string\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n  if (opts.currentIterations > 0) {\n    // console.log('iterating', currentIterations)\n  }\n\n  // console.log(now - startTime)\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  }\n\n  // execute the provided method to find a potential satifised value\n  var result = method.apply(this, args);\n\n  // if the result has not been previously found, add it to the found array and return the value as it's unique\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\nmodule.exports = unique;","map":{"version":3,"names":["unique","found","exclude","currentIterations","defaultCompare","obj","key","errorMessage","now","code","opts","console","error","log","Object","keys","length","startTime","Error","exec","method","args","Date","getTime","maxTime","maxRetries","compare","result","apply","indexOf","module","exports"],"sources":["/Volumes/Datos/Coderhouse/Comision32065Coderhouse/clase41/webApplication/frontend/node_modules/faker/vendor/unique.js"],"sourcesContent":["// the `unique` module\nvar unique = {};\n\n// global results store\n// currently uniqueness is global to entire faker instance\n// this means that faker should currently *never* return duplicate values across all API methods when using `Faker.unique`\n// it's possible in the future that some users may want to scope found per function call instead of faker instance\nvar found = {};\n\n// global exclude list of results\n// defaults to nothing excluded\nvar exclude = [];\n\n// current iteration or retries of unique.exec ( current loop depth )\nvar currentIterations = 0;\n\n// uniqueness compare function\n// default behavior is to check value as key against object hash\nvar defaultCompare = function(obj, key) {\n  if (typeof obj[key] === 'undefined') {\n    return -1;\n  }\n  return 0;\n};\n\n// common error handler for messages\nunique.errorMessage = function (now, code, opts) {\n  console.error('error', code);\n  console.log('found', Object.keys(found).length, 'unique entries before throwing error. \\nretried:', currentIterations, '\\ntotal time:', now - opts.startTime, 'ms');\n  throw new Error(code + ' for uniqueness check \\n\\nMay not be able to generate any more unique values with current settings. \\nTry adjusting maxTime or maxRetries parameters for faker.unique()')\n};\n\nunique.exec = function (method, args, opts) {\n  //console.log(currentIterations)\n\n  var now = new Date().getTime();\n\n  opts = opts || {};\n  opts.maxTime = opts.maxTime || 3;\n  opts.maxRetries = opts.maxRetries || 50;\n  opts.exclude = opts.exclude || exclude;\n  opts.compare = opts.compare || defaultCompare;\n\n  if (typeof opts.currentIterations !== 'number') {\n    opts.currentIterations = 0;\n  }\n\n  if (typeof opts.startTime === 'undefined') {\n    opts.startTime = new Date().getTime();\n  }\n\n  var startTime = opts.startTime;\n\n  // support single exclude argument as string\n  if (typeof opts.exclude === 'string') {\n    opts.exclude = [opts.exclude];\n  }\n\n  if (opts.currentIterations > 0) {\n    // console.log('iterating', currentIterations)\n  }\n\n  // console.log(now - startTime)\n  if (now - startTime >= opts.maxTime) {\n    return unique.errorMessage(now, 'Exceeded maxTime:' + opts.maxTime, opts);\n  }\n\n  if (opts.currentIterations >= opts.maxRetries) {\n    return unique.errorMessage(now, 'Exceeded maxRetries:' + opts.maxRetries, opts);\n  }\n\n  // execute the provided method to find a potential satifised value\n  var result = method.apply(this, args);\n\n  // if the result has not been previously found, add it to the found array and return the value as it's unique\n  if (opts.compare(found, result) === -1 && opts.exclude.indexOf(result) === -1) {\n    found[result] = result;\n    opts.currentIterations = 0;\n    return result;\n  } else {\n    // console.log('conflict', result);\n    opts.currentIterations++;\n    return unique.exec(method, args, opts);\n  }\n};\n\nmodule.exports = unique;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}